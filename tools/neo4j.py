from neo4j import GraphDatabase as gd

def connect(URL:str="neo4j://neo4j", auth:tuple=("neo4j", "llm-agents")):
    """
    A connection function for the Neo4j database. 
    Default parameters are used to connect to the docker container instance.
    """
    
    gdb = gd.driver(URL, auth=auth)
    gdb.verify_connectivity()

    return gdb

def query_neo4j(query:str, gdb=None)->str:
    """
    A simple function that will query the neo4j database with the provided query.
    If a connection to the database is not given a default one will be used, 
    for instance the one running in the docker container.
    
    Arguments:
        query (str): The query string generated by an llm model.
        gdb (gd.driver): The connection to the database, default is None.

    Returns:
        (str): Either the results of the query or an exception.
    """
   
    if gdb is None: 
        gdb = connect()

    try:
        records, summary, keys = gdb.execute_query(query)
        return repr(records)
    except Exception as e:
        return repr(e)